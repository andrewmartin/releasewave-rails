/* eslint no-unused-vars: 0 */

/**
 * auto-generated file
 * schema version: 20221102194338
 * This file was automatically generated by schema2type
 */
declare namespace schema {
  type ActiveStorageAttachment = {
    id: number;
    name: string;
    recordType: string;
    recordId: number;
    blobId: number;
    createdAt: string;
  }

  type ActiveStorageBlob = {
    id: number;
    key: string;
    filename: string;
    contentType: string | null;
    metadata: string | null;
    byteSize: number;
    checksum: string;
    createdAt: string;
  }

  type Article = {
    id: number;
    title: string | null;
    content: string | null;
    createdAt: string;
    updatedAt: string;
    slug: string | null;
  }

  type ArtistRelease = {
    id: number;
    artistId: number | null;
    releaseId: number | null;
  }

  type Artist = {
    id: number;
    name: string | null;
    bandcamp: string | null;
    facebook: string | null;
    spotify: string | null;
    soundcloud: string | null;
    createdAt: string;
    updatedAt: string;
    imageFileName: string | null;
    imageContentType: string | null;
    imageFileSize: number | null;
    imageUpdatedAt: string | null;
    slug: string | null;
    website: string | null;
    youtube: string | null;
    itunes: string | null;
    twitter: string | null;
    shortDescription: string | null;
    instagram: string | null;
  }

  type ArtistsRelease = {
    id: number;
    releaseId: number;
    artistId: number;
  }

  type Embed = {
    id: number;
    content: string | null;
    createdAt: string;
    updatedAt: string;
  }

  type FriendlyIdSlug = {
    id: number;
    slug: string;
    sluggableId: number;
    sluggableType: string | null;
    scope: string | null;
    createdAt: string | null;
  }

  type Medium = {
    id: number;
    fileFileName: string | null;
    fileContentType: string | null;
    fileFileSize: number | null;
    fileUpdatedAt: string | null;
    createdAt: string;
    updatedAt: string;
    height: number | null;
    width: number | null;
  }

  type Option = {
    id: number;
    featuredDateWindowBefore: number | null;
    featuredDateWindowAfter: number | null;
    name: string | null;
    data: string | null;
  }

  type ReleaseEmbed = {
    id: number;
    releaseId: number | null;
    embedId: number | null;
    createdAt: string;
    updatedAt: string;
  }

  type Release = {
    id: number;
    artistId: number | null;
    name: string | null;
    description: string | null;
    releaseDate: string | null;
    createdAt: string;
    updatedAt: string;
    imageFileName: string | null;
    imageContentType: string | null;
    imageFileSize: number | null;
    imageUpdatedAt: string | null;
    slug: string | null;
    buy: string | null;
    shortDescription: string | null;
    featured: boolean | null;
  }

  type Review = {
    id: number;
    name: string | null;
    releaseId: number | null;
    content: string | null;
    createdAt: string;
    updatedAt: string;
    slug: string | null;
    userId: number | null;
    score: string | null;
  }

  type SharedTag = {
    id: number;
    artistId: number | null;
    releaseId: number | null;
    articleId: number | null;
    tagId: number | null;
  }

  type Tag = {
    id: number;
    name: string | null;
    artistId: number | null;
    releaseId: number | null;
    articleId: number | null;
    slug: string | null;
  }

  type User = {
    id: number;
    provider: string;
    uid: string;
    encryptedPassword: string;
    resetPasswordToken: string | null;
    resetPasswordSentAt: string | null;
    allowPasswordChange: boolean | null;
    rememberCreatedAt: string | null;
    signInCount: number;
    currentSignInAt: string | null;
    lastSignInAt: string | null;
    currentSignInIp: string | null;
    lastSignInIp: string | null;
    confirmationToken: string | null;
    confirmedAt: string | null;
    confirmationSentAt: string | null;
    unconfirmedEmail: string | null;
    name: string | null;
    nickname: string | null;
    email: string | null;
    tokens: string | null;
    createdAt: string;
    updatedAt: string;
    isAdmin: boolean | null;
    imageFileName: string | null;
    imageContentType: string | null;
    imageFileSize: number | null;
    imageUpdatedAt: string | null;
  }
}
